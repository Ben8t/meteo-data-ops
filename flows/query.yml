id: query
namespace: dev

inputs:
  - name: data
    type: FILE

tasks:

  - id: wd
    type: io.kestra.core.tasks.flows.WorkingDirectory
    namespaceFiles:
      enabled: true
    tasks:

      - id: query
        type: io.kestra.plugin.jdbc.duckdb.Query
        inputFiles:
          data.csv: "{{ inputs.data }}"
        store: true
        sql: "{{ read('script/training_data.sql') }}"

      - id: csv_writer
        type: io.kestra.plugin.serdes.csv.CsvWriter
        from: "{{ outputs.query.uri }}"

      - id: train
        type: io.kestra.plugin.scripts.python.Commands
        inputFiles:
          training_data.csv: "{{ outputs.csv_writer.uri }}"
        outputFiles:
          - model.pkl
        beforeCommands:
          - pip install pandas scikit-learn
        commands:
          - python script/train.py
          - cp model.pkl /meteo_data

      - id: predict
        type: io.kestra.plugin.scripts.python.Commands
        inputFiles:
          predict_data.csv: "{{ outputs.csv_writer.uri }}"
          model.pkl: "{{ outputs.train.outputFiles['model.pkl'] }}"
        commands:
          - python script/predict.py

taskDefaults:
  - type: io.kestra.plugin.scripts.python.Commands
    values:
      warningOnStdErr: false
      runner: PROCESS